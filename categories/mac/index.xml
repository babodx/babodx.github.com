<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mac on 鑫的方向</title>
    <link>https://xinlogs.com/categories/mac/</link>
    <description>Recent content in Mac on 鑫的方向</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 02 Oct 2013 21:58:00 +0000</lastBuildDate>
    
	<atom:link href="https://xinlogs.com/categories/mac/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>iterm2给ssh窗口上色</title>
      <link>https://xinlogs.com/post/2013-10-02-iterm2gei-sshchuang-kou-shang-se/</link>
      <pubDate>Wed, 02 Oct 2013 21:58:00 +0000</pubDate>
      
      <guid>https://xinlogs.com/post/2013-10-02-iterm2gei-sshchuang-kou-shang-se/</guid>
      <description>&lt;p&gt;#给iterm2的ssh窗口上颜色#&lt;/p&gt;

&lt;p&gt;经常开ssh登陆远程服务器，有时自己都分不清那个是远程那个是本地了。&lt;/p&gt;

&lt;p&gt;今天看到一个技巧，可以让iterm2 给ssh到远程的窗口上个颜色。这样一看颜色就知道不是本地了。&lt;/p&gt;

&lt;p&gt;首先就是编辑~.zshrc文件,在末尾加入&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source iterm2.zsh

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后在用户目录创建一个iterm2.zsh文件，内容如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tab-color() {
  echo -ne &amp;quot;\033]6;1;bg;red;brightness;$1\a&amp;quot;
  echo -ne &amp;quot;\033]6;1;bg;green;brightness;$2\a&amp;quot;
  echo -n
}

tab-reset() {
  echo -ne &amp;quot;\033]6;1;bg;*;default\a&amp;quot;
}

color-ssh() {
  if [[ -n &amp;quot;$ITERM_SESSION_ID&amp;quot; ]]; then
    trap &amp;quot;tab-reset&amp;quot; INT EXIT
    if [[ &amp;quot;$*&amp;quot; =~ &amp;quot;production|ec2-.*compute-1&amp;quot; ]]; then
      tab-color 255 0 0
    else
      tab-color 0 255 0
    fi
  fi
  ssh $*
}
compdef _ssh color-ssh=ssh
alias ssh=color-ssh

&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>mac下的secureCRT如何保存密码？</title>
      <link>https://xinlogs.com/post/2013-05-06-securecrt-for-mac-store-password/</link>
      <pubDate>Mon, 06 May 2013 11:03:00 +0000</pubDate>
      
      <guid>https://xinlogs.com/post/2013-05-06-securecrt-for-mac-store-password/</guid>
      <description>mac下面的secureCRT默认保存不上密码，我们选择了保存密码后，下次登录还是提示密码错误。
解决办法： 因为secureCRT默认采用mac的keychain来处理密码，所以会出现这个问题。我们只需要去掉这个选项即可正常。
打开secureCRT后，按&amp;rdquo;command+,&amp;rdquo; 在&amp;rdquo;advanced&amp;rdquo;里面去掉&amp;rdquo;Use Keychain&amp;rdquo;的选项即可。</description>
    </item>
    
    <item>
      <title>mac下配置php调试环境</title>
      <link>https://xinlogs.com/post/2012-08-10-mac-xdebug-netbeans-config/</link>
      <pubDate>Fri, 10 Aug 2012 16:00:00 +0000</pubDate>
      
      <guid>https://xinlogs.com/post/2012-08-10-mac-xdebug-netbeans-config/</guid>
      <description>已经用了mac有2个月了，基本网络管理和开发工作都在mac下面了。
下面说下如何配置mac下面的php调试环境
我的环境：
 macbook air 2012款
 Mac OS X 10.8 系统 php环境：XAMPP 1.7.3 开发工具：一般用sublime text 2，调试或者项目开发用netbeans  下面说说如何安装调试环境，主要就是xdebug的安装和配置
这里需要提下mac下面的安装包管理工具homebrew
我就是用brew来安装xdebug的。homebrew是一个用ruby开发的，类似macport的工具。可以在线安装软件，就像linux下的apt-get或者yum一样。
安装homebrew
需要系统可以支持ruby，通过ruby -v命令可以查看ruby版本。mac os 自带ruby
直接在终端里输入
ruby &amp;lt;(curl -fsSk https://raw.github.com/mxcl/homebrew/go)  上面命令执行完，brew命令就可以执行了。
先运行brew doctor测试下环境是否完整，如果需要，还要添加Command Line Tools。
添加Command Line Tools
打开Xcode，在preferences-&amp;gt;downloads里面下载并安装Command Line Tools
一切正确的话，执行brew doctor显示如下
babomatoMacBook-Air:~ babo$ brew doctor Your system is raring to brew.  安装好brew后，先执行brew update更新下软件包的源，然后再加载两个formula的资源
brew update brew tap josegonzalez/homebrew-php brew tap homebrew/dupes  完成后，就可以通过brew search和brew install来查找并安装软件了</description>
    </item>
    
    <item>
      <title>快速提升app store下载速度</title>
      <link>https://xinlogs.com/post/2012-07-29-accelerate-app-store-download/</link>
      <pubDate>Sun, 29 Jul 2012 10:00:00 +0000</pubDate>
      
      <guid>https://xinlogs.com/post/2012-07-29-accelerate-app-store-download/</guid>
      <description>前两天开始更新MAC OS Mountain Lion。
为了下载这个4.5G的内容，可是郁闷坏了。计算出来的剩余时间7天。
于是开始找加速下载的办法，看来一些帖子以后基本知道了下载速度主要取决与dns将你的请求解析到哪台服务器。
网上一般是都是基于自己找到一台快速的下载服务器IP，然后手动修改/etc/hosts文件的办法。 但是其实看原来就知道，如果我们设置的DNS得当，就能起到从最快服务器下载的目的。
于是我查到了http://dns.v2ex.com/这个网站，但是使用这个dns后，速度依然很慢。
后来又在www.weiphone.com找到了一个台湾的DNS。设置后速度大幅提升。 如果你也在北京、也用歌华有线。
试试下面这个台湾的DNS吧 168.95.1.1  </description>
    </item>
    
    <item>
      <title>mac下用ssh转发端口</title>
      <link>https://xinlogs.com/post/2012-07-13-mac-vnc-rdp-over-ssh/</link>
      <pubDate>Fri, 13 Jul 2012 19:50:00 +0000</pubDate>
      
      <guid>https://xinlogs.com/post/2012-07-13-mac-vnc-rdp-over-ssh/</guid>
      <description>起因是这样的，我在服务器上安装了个虚拟winxp。但是想要在外网远程控制却不行，因为这个虚拟系统没有公网IP。
我的服务器是有公网IP的，例如：210.1.1.1
服务器所在内网全部是10.0.1.x 网段，外网IP是通过路由器映射给服务器的，也就是说服务器上查看IP，只有10.0.1.1这个 虚拟机我是用的xen，然后采用nat方式将一个192.168.122.x的ip分配给虚拟winxp使用。这个192.168.122.x段ip只有虚拟服务器和虚拟机可以访问到，就连同一个内网的10.0.1.x段其他机器都不能访问
我要想远程控制winxp，只有两个办法，一个是通过xen提供的vnc来访问。也就是访问10.0.1.1:5901或者外网210.1.1.1:5901
但是vnc的速度确实比winxp的远程桌面慢，有时候刷屏都很卡。但是winxp的ip又不能从外面访问，只能虚拟服务器自己用。 后来我就想到了用ssh来做跳转，将192.168.122.1（winxp的ip）下3389端口转发过来，这样不是就可以远程通过3389访问了？ 因为mac下面的命令行直接支持ssh，确实比windows方面。linux下的常用命令和工具都支持！
我就直接在外网通过下面命令建立了ssh隧道
ssh -N -L3389:192.168.122.1:3389 root@114.251.211.103  其中－N表示不用显示提示符，这个选项也可以不要 －L表示建立一个隧道，格式：[-L [bind_address:]port:host:hostport]
我的这条命令就是将本地的3389端口通过ssh转发到192.168.122.1的3389端口，注意：这里的192.168.122.1必须是远程ssh服务器可以访问的。
这样你访问本地127.0.0.1:3389就相当于直接访问192.168.122.1:3389了
当然，通过调整端口也可以实现vnc的转发
其实通过ssh －D等选项，还可以建立ssh通道，让浏览器翻墙使用。这个网上资料很多，就不多说了。</description>
    </item>
    
  </channel>
</rss>